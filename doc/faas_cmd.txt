Useful commands

# register the docker image
docker run -d -p 5000:5000 --restart=always --name registry registry:2

# open bash for look the docker image
docker run -it --rm localhost:5000/ocr-detect:latest sh

# build and make docker image using faas
faas-cli build -f stack.yml
# Push the image to docker location
faas-cli push -f stack.yml
# deploy the image in docker server
faas-cli deploy -f stack.yml

# single cmd for build, push deploy
faas-cli up -f stack.yml

# view logs of ran image
faas-cli logs ocr-detect

# create template for services
faas-cli new my-function --lang python3-http-debian

# Verify in command line input 
curl -X POST http://localhost:8080 \
  -H "Content-Type: application/json" \
  -d {					\
  "image_b64": "iVBORw0KGgoAAAANSUhEUgAA...", \
  "diagnostics": true				\
}


Access through website
http://localhost:8080/ui/
user name: admin
password: get through execute this command: sudo cat /var/lib/faasd/secrets/basic-auth-password

Docker action
docker images      // show the docker image
docker rmi -f obj-detect:old  // remove old service

faas-cli list      // list servives from faas
sudo docker images  // list of docker images
faas-cli remove obj-detect  // remove unused in faas

# clean up for system
df -h                  // list memory usage
sudo apt autoremove -y
sudo apt clean          // clean the unused in system
docker system prune -a --volumes      // remove unused docker images

## Start at fisrt time
# restart the faas service
sudo systemctl restart faasd
sudo systemctl restart faasd-provider
curl -X POST http://127.0.0.1:8080/function/ocr_detect // activate via in server, if it was not ready in portal

## setup the tunneling for services are running in WSL and this will access via know server by ngnix
1) make the connection from wsl to remote machine which the one has static ip
 ssh -N -R 127.0.0.1:8088:localhost:8080 bitresearch@117.200.182.195
2) setup the ngnix server for route the request from 80 to 8088 from wsl machine
    1) update the cnf for ngnix
sudo nano /etc/nginx/sites-available/faasd_proxy
server {
    listen 80;
    listen [::]:80;
    server_name _; 

    location / {
        # CRITICAL: Forward traffic from public port 80 to the SSH tunnel on port 8088
        proxy_pass http://127.0.0.1:8088; 

        # Standard headers for OpenFaaS
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
      2) delete default link fog ngnix
# This is the most common default file link location
sudo unlink /etc/nginx/sites-enabled/default

      3) Create a symlink to enable the configuration
sudo ln -s /etc/nginx/sites-available/faasd_proxy /etc/nginx/sites-enabled/

      4) Test the Nginx configuration for syntax errors
sudo nginx -t

      5) Reload Nginx to apply changes
sudo systemctl reload nginx

3) then use link from browser
http://117.200.182.195/ui/






